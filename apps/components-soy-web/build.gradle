dependencies {
    compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "default"
    compileOnly group: "javax.servlet", name: "javax.servlet-api", version: "3.0.1"
    compileOnly group: "org.osgi", name: "org.osgi.service.component.annotations", version: "1.3.0"
}

replaceSoyTranslation {
    doLast {
        FileTree soyJsFileTree = fileTree(dir: "classes", include: "**/*.soy.js")

        soyJsFileTree.each {
            it.text = it.text.replaceAll("Liferay.Language.get\\('(.*)'\\)", "\$0.replace(/\\{|\\}/g,'\\\\x01')")
        }
    }
}

task copyPackageJson(type: Copy)
task testJS
task copyFlatpickr(type: Copy)

processResources {
    dependsOn copyFlatpickr
}

copyFlatpickr {
    dependsOn npmInstall
    from npmInstall.nodeModulesDir
    include "flatpickr/dist/flatpickr.js"
    includeEmptyDirs = false
    into "${sourceSets.main.output.resourcesDir}/META-INF/resources"
}

jar {
    dependsOn copyPackageJson
}

copyPackageJson {
    from projectDir
    include "package.json"
    into "${sourceSets.main.output.resourcesDir}"
}

transpileJS {
    srcIncludes = "**/*.es.js"
    soySrcIncludes = "**/*.soy"
}

configJSModules {
    moduleFormat "/.soy/g,.soy.js"
}

node {
    nodeVersion "8.4.0"
}

testJS {
    dependsOn npmRunTest
}

afterEvaluate {
    transpileJS {
        soyDependencies = []
    }
}
